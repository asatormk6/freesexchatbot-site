<!--
title: Free Sex Chat Bot - Offline AI Companion
-->
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Run your own offline AI chatbot. No subscriptions. Total privacy. Local, fast, and free or $5 one-click." />
    <title>Free Sex Chat Bot</title>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Fira+Mono&display=swap');

      :root {
        --accent: #00cc7a;
        --accent-light: #99ffcc;
        --blue: #00bfff;
        --bg: #000;
      }

      html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        width: 100%;
        font-family: 'Fira Mono', monospace;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: var(--bg);
        background-image:
          radial-gradient(circle at center, rgba(0, 204, 122, 0.15) 0%, rgba(0, 204, 122, 0.06) 45%, rgba(0, 0, 0, 0.85) 100%);
        background-size: cover;
        background-repeat: no-repeat;
        color: var(--accent);
        position: relative;
        text-align: center;
      }

      body::before, body::after {
        content: '';
        position: absolute;
        inset: 0;
        pointer-events: none;
        z-index: 0;
      }

      body::before {
        background-image: repeating-linear-gradient(
          to bottom,
          rgba(0, 204, 122, 0.015),
          rgba(0, 204, 122, 0.015) 1px,
          transparent 1px,
          transparent 2px
        );
        animation: scanlines 1.5s linear infinite;
      }

      body::after {
        background-image: repeating-linear-gradient(
          to bottom,
          rgba(255, 255, 255, 0.01),
          rgba(255, 255, 255, 0.01) 1px,
          transparent 1px,
          transparent 2px
        );
      }

      @keyframes scanlines {
        from { background-position-y: 0; }
        to { background-position-y: 2px; }
      }

      main {
        position: relative;
        z-index: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 1.5rem;
      }

      h1 {
        font-size: 2.7rem;
        margin-bottom: 0.6rem;
        color: var(--accent);
        text-shadow: 0 0 8px #00cc7a66, 0 0 14px #00cc7a33;
      }

      .cursor {
        display: inline-block;
        margin-left: 6px;
        width: 10px;
        animation: blink 1s steps(2, start) infinite;
        color: var(--accent);
      }

      @keyframes blink {
        0%, 50% { opacity: 1; }
        50.01%, 100% { opacity: 0; }
      }

      p {
        font-size: 1.15rem;
        max-width: 700px;
        margin: 0.4rem 0 1.2rem;
        color: var(--accent-light);
        line-height: 1.5;
        text-shadow: 0 0 6px #00cc7a22;
      }

      .mobile-hide {
        display: inline;
      }

      @media (max-width: 600px) {
        .mobile-hide {
          display: none;
        }
      }

      .buttons {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1.2rem;
        margin-top: 0.8rem;
        margin-bottom: 1.2rem; /* adjusted from 1.6rem to balance spacing */
      }

      .button-row {
        display: flex;
        gap: 1.2rem;
        flex-wrap: wrap;
        justify-content: center;
      }

      a.button {
        padding: 0.9rem 1.8rem;
        background-color: transparent;
        border: 2px solid var(--accent);
        color: var(--accent);
        text-decoration: none;
        border-radius: 6px;
        font-weight: bold;
        transition: all 0.2s ease;
        white-space: nowrap;
      }

      a.button:hover {
        background-color: var(--accent);
        color: #000;
        box-shadow: 0 0 10px #00cc7a88;
      }

      a.button.alt {
        border-color: var(--blue);
        color: var(--blue);
      }

      a.button.alt:hover {
        background-color: var(--blue);
        color: #000;
        box-shadow: 0 0 10px #00bfff88;
      }

      .view-demo {
        margin-top: 1.2rem; /* consistent with text-to-buttons spacing */
        padding: 0.3rem 0.9rem;
        border: 2px solid var(--accent-light);
        color: var(--accent-light);
        font-size: 0.9rem;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
      }

      .view-demo:hover {
        background-color: var(--accent-light);
        color: #000;
        box-shadow: 0 0 6px #99ffcc88;
      }

      .overlay {
        display: none;
        position: fixed;
        inset: 0;
        background-color: rgba(0, 0, 0, 0.85);
        justify-content: center;
        align-items: center;
        z-index: 10;
      }

      .overlay img {
        max-width: 90%;
        max-height: 90%;
        border: 2px solid #00cc7a;
        border-radius: 10px;
        box-shadow: 0 0 20px #00cc7a88;
      }

      footer {
        margin-top: 2rem;
        font-size: 0.8rem;
        color: #00cc7a88;
        text-shadow: 0 0 4px #00cc7a44;
      }
    </style>
  </head>
  <body>
    <main>
      <h1>Free Sex Chat Bot<span class="cursor">|</span></h1>
      <p>
        Offline, uncensored AI. No bullshit. No subscriptions.<br />
        <span class="mobile-hide">Self install or grab the lazy one-click version with long-term memory preconfigured for just $5.</span>
      </p>
      <div class="buttons">
        <div class="button-row">
          <a class="button alt" href="free/">🛠️ Free DIY Install</a>
          <a class="button" href="lazy/">💸 $5 One-Click Installer</a>
        </div>
        <a class="view-demo" id="viewDemo">View Demo Here</a>
      </div>

      <footer>
        © 2025 FreeSexChatBot
      </footer>
    </main>

    <!-- Popup Overlay -->
    <div class="overlay" id="overlay">
      <img src="AI.jpg" alt="AI Chat Demo" />
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const viewDemo = document.getElementById('viewDemo');
        const overlay = document.getElementById('overlay');

        if (!viewDemo || !overlay) return;

        viewDemo.addEventListener('click', () => {
          overlay.style.display = 'flex';
        });

        overlay.addEventListener('click', (e) => {
          if (e.target === overlay) {
            overlay.style.display = 'none';
          }
        });

        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            overlay.style.display = 'none';
          }
        });
      });
    </script>
  </body>
</html>
